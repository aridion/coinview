{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/aron/Documents/code_training/coinview/components/Prices.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\n\nvar Prices = function Prices(props) {\n  _s();\n\n  var _useState = useState({\n    currency: \"USD\"\n  }),\n      coinData = _useState[0],\n      setCoinData = _useState[1];\n\n  var usableCoinData = Object.entries(props.bpi.bpi);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, __jsx(\"select\", {\n    onChange: function onChange(selected) {\n      return setCoinData({\n        currency: selected.target.value\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, __jsx(\"option\", {\n    value: \"USD\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, \"USD\"), __jsx(\"option\", {\n    value: \"GBP\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, \"GBP\"), __jsx(\"option\", {\n    value: \"EUR\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"EUR\")), console.log(coinData), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"Bitcoin rate for \".concat(coinData.currency, \" : \").concat(usableCoinData[0][1].rate))));\n};\n\n_s(Prices, \"3l2NGE4L5tsoK+a1Cp96roZMckQ=\");\n\n_c = Prices;\nexport default Prices;\n\nvar _c;\n\n$RefreshReg$(_c, \"Prices\");","map":{"version":3,"sources":["/Users/aron/Documents/code_training/coinview/components/Prices.js"],"names":["useState","Prices","props","currency","coinData","setCoinData","usableCoinData","Object","entries","bpi","selected","target","value","console","log","rate"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACQF,QAAQ,CAAC;AACvCG,IAAAA,QAAQ,EAAE;AAD6B,GAAD,CADhB;AAAA,MACjBC,QADiB;AAAA,MACPC,WADO;;AAKxB,MAAMC,cAAc,GAAGC,MAAM,CAACC,OAAP,CAAeN,KAAK,CAACO,GAAN,CAAUA,GAAzB,CAAvB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,QAAQ,EAAE,kBAACC,QAAD;AAAA,aACRL,WAAW,CAAC;AAAEF,QAAAA,QAAQ,EAAEO,QAAQ,CAACC,MAAT,CAAgBC;AAA5B,OAAD,CADH;AAAA,KADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALF,EAME;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANF,EAOE;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPF,CADF,EAUGC,OAAO,CAACC,GAAR,CAAYV,QAAZ,CAVH,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACuBA,QAAQ,CAACD,QADhC,gBAC8CG,cAAc,CAAC,CAAD,CAAd,CAAkB,CAAlB,EAAqBS,IADnE,EADF,CAXF,CADF;AAmBD,CA1BD;;GAAMd,M;;KAAAA,M;AA4BN,eAAeA,MAAf","sourcesContent":["import { useState } from \"react\";\n\nconst Prices = (props) => {\n  const [coinData, setCoinData] = useState({\n    currency: \"USD\",\n  });\n\n  const usableCoinData = Object.entries(props.bpi.bpi);\n\n  return (\n    <div>\n      <select\n        onChange={(selected) =>\n          setCoinData({ currency: selected.target.value })\n        }\n      >\n        <option value=\"USD\">USD</option>\n        <option value=\"GBP\">GBP</option>\n        <option value=\"EUR\">EUR</option>\n      </select>\n      {console.log(coinData)}\n      <ul>\n        <li>\n          {`Bitcoin rate for ${coinData.currency} : ${usableCoinData[0][1].rate}`}\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Prices;\n"]},"metadata":{},"sourceType":"module"}