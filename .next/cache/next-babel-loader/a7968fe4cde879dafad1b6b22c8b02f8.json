{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/aron/Documents/code_training/coinview/components/Prices.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\n\nvar Prices = function Prices(props) {\n  _s();\n\n  var _useState = useState({\n    currency: \"USD\",\n    rate: props.bpi.bpi\n  }),\n      coinData = _useState[0],\n      setCoinData = _useState[1];\n\n  console.log(\"bpi\", props.bpibpi);\n  var coinDataArray = Object.entries(props.bpi.bpi);\n\n  var onDropdownChange = function onDropdownChange(num) {\n    return {\n      currency: coinDataArray[num][1].code,\n      rate: coinDataArray[num][1].rate\n    };\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"select\", {\n    onChange: function onChange(selected) {\n      return setCoinData(onDropdownChange(selected.target.value));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(\"option\", {\n    value: \"0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"US Dollars\"), __jsx(\"option\", {\n    value: \"1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"GB Pounds\"), __jsx(\"option\", {\n    value: \"2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Euros\")), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Bitcoin rate for \".concat(coinData.currency, \" : \").concat(coinData.rate))));\n};\n\n_s(Prices, \"YdyVYhv/geDe/UD0Y1X8q7RL66o=\");\n\n_c = Prices;\nexport default Prices;\n\nvar _c;\n\n$RefreshReg$(_c, \"Prices\");","map":{"version":3,"sources":["/Users/aron/Documents/code_training/coinview/components/Prices.js"],"names":["useState","Prices","props","currency","rate","bpi","coinData","setCoinData","console","log","bpibpi","coinDataArray","Object","entries","onDropdownChange","num","code","selected","target","value"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACQF,QAAQ,CAAC;AACvCG,IAAAA,QAAQ,EAAE,KAD6B;AAEvCC,IAAAA,IAAI,EAAEF,KAAK,CAACG,GAAN,CAAUA;AAFuB,GAAD,CADhB;AAAA,MACjBC,QADiB;AAAA,MACPC,WADO;;AAMxBC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBP,KAAK,CAACQ,MAAzB;AACA,MAAMC,aAAa,GAAGC,MAAM,CAACC,OAAP,CAAeX,KAAK,CAACG,GAAN,CAAUA,GAAzB,CAAtB;;AAEA,MAAMS,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,GAAD,EAAS;AAChC,WAAO;AACLZ,MAAAA,QAAQ,EAAEQ,aAAa,CAACI,GAAD,CAAb,CAAmB,CAAnB,EAAsBC,IAD3B;AAELZ,MAAAA,IAAI,EAAEO,aAAa,CAACI,GAAD,CAAb,CAAmB,CAAnB,EAAsBX;AAFvB,KAAP;AAID,GALD;;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,QAAQ,EAAE,kBAACa,QAAD;AAAA,aACRV,WAAW,CAACO,gBAAgB,CAACG,QAAQ,CAACC,MAAT,CAAgBC,KAAjB,CAAjB,CADH;AAAA,KADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAME;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,EAOE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAyBb,QAAQ,CAACH,QAAlC,gBAAgDG,QAAQ,CAACF,IAAzD,EADF,CAVF,CADF;AAgBD,CAhCD;;GAAMH,M;;KAAAA,M;AAkCN,eAAeA,MAAf","sourcesContent":["import { useState } from \"react\";\n\nconst Prices = (props) => {\n  const [coinData, setCoinData] = useState({\n    currency: \"USD\",\n    rate: props.bpi.bpi,\n  });\n\n  console.log(\"bpi\", props.bpibpi);\n  const coinDataArray = Object.entries(props.bpi.bpi);\n\n  const onDropdownChange = (num) => {\n    return {\n      currency: coinDataArray[num][1].code,\n      rate: coinDataArray[num][1].rate,\n    };\n  };\n\n  return (\n    <div>\n      <select\n        onChange={(selected) =>\n          setCoinData(onDropdownChange(selected.target.value))\n        }\n      >\n        <option value=\"0\">US Dollars</option>\n        <option value=\"1\">GB Pounds</option>\n        <option value=\"2\">Euros</option>\n      </select>\n      <ul>\n        <li>{`Bitcoin rate for ${coinData.currency} : ${coinData.rate}`}</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Prices;\n"]},"metadata":{},"sourceType":"module"}