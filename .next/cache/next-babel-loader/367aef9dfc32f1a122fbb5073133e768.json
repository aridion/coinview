{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/aron/Documents/code_training/coinview/components/Prices.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\n\nvar Prices = function Prices(props) {\n  _s();\n\n  var _useState = useState({\n    currency: props.bpi.bpi.USD.code,\n    rate: props.bpi.bpi.USD.rate,\n    sign: props.bpi.bpi.USD.symbol.fromCharCode(parseInt(unicode, 16))\n  }),\n      coinData = _useState[0],\n      setCoinData = _useState[1];\n\n  var coinDataArray = Object.entries(props.bpi.bpi);\n\n  var onDropdownChange = function onDropdownChange(num) {\n    return {\n      currency: coinDataArray[num][1].code,\n      rate: coinDataArray[num][1].rate\n    };\n  };\n\n  console.log(props.bpi.bpi.USD.symbol.fromCharCode(parseInt(unicode, 16)));\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(\"select\", {\n    onChange: function onChange(selected) {\n      return setCoinData(onDropdownChange(selected.target.value));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, __jsx(\"option\", {\n    value: \"0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"US Dollars\"), __jsx(\"option\", {\n    value: \"1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"GB Pounds\"), __jsx(\"option\", {\n    value: \"2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Euros\")), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Bitcoin rate for \".concat(coinData.currency, \" : \").concat(coinData.rate))));\n};\n\n_s(Prices, \"mRtXxZ1ztFR1Qrm4nnxUtszFcpU=\");\n\n_c = Prices;\nexport default Prices;\n\nvar _c;\n\n$RefreshReg$(_c, \"Prices\");","map":{"version":3,"sources":["/Users/aron/Documents/code_training/coinview/components/Prices.js"],"names":["useState","Prices","props","currency","bpi","USD","code","rate","sign","symbol","fromCharCode","parseInt","unicode","coinData","setCoinData","coinDataArray","Object","entries","onDropdownChange","num","console","log","selected","target","value"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACQF,QAAQ,CAAC;AACvCG,IAAAA,QAAQ,EAAED,KAAK,CAACE,GAAN,CAAUA,GAAV,CAAcC,GAAd,CAAkBC,IADW;AAEvCC,IAAAA,IAAI,EAAEL,KAAK,CAACE,GAAN,CAAUA,GAAV,CAAcC,GAAd,CAAkBE,IAFe;AAGvCC,IAAAA,IAAI,EAAEN,KAAK,CAACE,GAAN,CAAUA,GAAV,CAAcC,GAAd,CAAkBI,MAAlB,CAAyBC,YAAzB,CAAsCC,QAAQ,CAACC,OAAD,EAAU,EAAV,CAA9C;AAHiC,GAAD,CADhB;AAAA,MACjBC,QADiB;AAAA,MACPC,WADO;;AAOxB,MAAMC,aAAa,GAAGC,MAAM,CAACC,OAAP,CAAef,KAAK,CAACE,GAAN,CAAUA,GAAzB,CAAtB;;AAEA,MAAMc,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,GAAD,EAAS;AAChC,WAAO;AACLhB,MAAAA,QAAQ,EAAEY,aAAa,CAACI,GAAD,CAAb,CAAmB,CAAnB,EAAsBb,IAD3B;AAELC,MAAAA,IAAI,EAAEQ,aAAa,CAACI,GAAD,CAAb,CAAmB,CAAnB,EAAsBZ;AAFvB,KAAP;AAID,GALD;;AAOAa,EAAAA,OAAO,CAACC,GAAR,CAAYnB,KAAK,CAACE,GAAN,CAAUA,GAAV,CAAcC,GAAd,CAAkBI,MAAlB,CAAyBC,YAAzB,CAAsCC,QAAQ,CAACC,OAAD,EAAU,EAAV,CAA9C,CAAZ;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,QAAQ,EAAE,kBAACU,QAAD;AAAA,aACRR,WAAW,CAACI,gBAAgB,CAACI,QAAQ,CAACC,MAAT,CAAgBC,KAAjB,CAAjB,CADH;AAAA,KADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAME;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,EAOE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAyBX,QAAQ,CAACV,QAAlC,gBAAgDU,QAAQ,CAACN,IAAzD,EADF,CAVF,CADF;AAgBD,CAlCD;;GAAMN,M;;KAAAA,M;AAoCN,eAAeA,MAAf","sourcesContent":["import { useState } from \"react\";\n\nconst Prices = (props) => {\n  const [coinData, setCoinData] = useState({\n    currency: props.bpi.bpi.USD.code,\n    rate: props.bpi.bpi.USD.rate,\n    sign: props.bpi.bpi.USD.symbol.fromCharCode(parseInt(unicode, 16)),\n  });\n\n  const coinDataArray = Object.entries(props.bpi.bpi);\n\n  const onDropdownChange = (num) => {\n    return {\n      currency: coinDataArray[num][1].code,\n      rate: coinDataArray[num][1].rate,\n    };\n  };\n\n  console.log(props.bpi.bpi.USD.symbol.fromCharCode(parseInt(unicode, 16)));\n\n  return (\n    <div>\n      <select\n        onChange={(selected) =>\n          setCoinData(onDropdownChange(selected.target.value))\n        }\n      >\n        <option value=\"0\">US Dollars</option>\n        <option value=\"1\">GB Pounds</option>\n        <option value=\"2\">Euros</option>\n      </select>\n      <ul>\n        <li>{`Bitcoin rate for ${coinData.currency} : ${coinData.rate}`}</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Prices;\n"]},"metadata":{},"sourceType":"module"}