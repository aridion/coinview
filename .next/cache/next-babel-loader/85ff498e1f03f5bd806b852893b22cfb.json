{"ast":null,"code":"var _jsxFileName = \"/Users/aron/Documents/code_training/coinview/components/Prices.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\n\nconst Prices = props => {\n  const coinDataArray = Object.entries(props.bpi.bpi);\n\n  const onDropdownChange = num => {\n    return {\n      currency: coinDataArray[num][1].code,\n      rate: coinDataArray[num][1].rate\n    };\n  };\n\n  const {\n    0: coinData,\n    1: setCoinData\n  } = useState({\n    currency: \"USD\",\n    rate: \"not checked\"\n  });\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(\"select\", {\n    onChange: selected => setCoinData(onDropdownChange(selected.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"US Dollars\"), __jsx(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"GB Pounds\"), __jsx(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Euros\")), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, `Bitcoin rate for ${coinData.currency} : ${coinData.rate}`)));\n};\n\nexport default Prices;","map":{"version":3,"sources":["/Users/aron/Documents/code_training/coinview/components/Prices.js"],"names":["useState","Prices","props","coinDataArray","Object","entries","bpi","onDropdownChange","num","currency","code","rate","coinData","setCoinData","selected","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,QAAMC,aAAa,GAAGC,MAAM,CAACC,OAAP,CAAeH,KAAK,CAACI,GAAN,CAAUA,GAAzB,CAAtB;;AAEA,QAAMC,gBAAgB,GAAIC,GAAD,IAAS;AAChC,WAAO;AACLC,MAAAA,QAAQ,EAAEN,aAAa,CAACK,GAAD,CAAb,CAAmB,CAAnB,EAAsBE,IAD3B;AAELC,MAAAA,IAAI,EAAER,aAAa,CAACK,GAAD,CAAb,CAAmB,CAAnB,EAAsBG;AAFvB,KAAP;AAID,GALD;;AAOA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0Bb,QAAQ,CAAC;AACvCS,IAAAA,QAAQ,EAAE,KAD6B;AAEvCE,IAAAA,IAAI,EAAE;AAFiC,GAAD,CAAxC;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,QAAQ,EAAGG,QAAD,IACRD,WAAW,CAACN,gBAAgB,CAACO,QAAQ,CAACC,MAAT,CAAgBC,KAAjB,CAAjB,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAME;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,EAOE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,oBAAmBJ,QAAQ,CAACH,QAAS,MAAKG,QAAQ,CAACD,IAAK,EAA9D,CADF,CAVF,CADF;AAgBD,CA/BD;;AAiCA,eAAeV,MAAf","sourcesContent":["import { useState } from \"react\";\n\nconst Prices = (props) => {\n  const coinDataArray = Object.entries(props.bpi.bpi);\n\n  const onDropdownChange = (num) => {\n    return {\n      currency: coinDataArray[num][1].code,\n      rate: coinDataArray[num][1].rate,\n    };\n  };\n\n  const [coinData, setCoinData] = useState({\n    currency: \"USD\",\n    rate: \"not checked\",\n  });\n\n  return (\n    <div>\n      <select\n        onChange={(selected) =>\n          setCoinData(onDropdownChange(selected.target.value))\n        }\n      >\n        <option value=\"0\">US Dollars</option>\n        <option value=\"1\">GB Pounds</option>\n        <option value=\"2\">Euros</option>\n      </select>\n      <ul>\n        <li>{`Bitcoin rate for ${coinData.currency} : ${coinData.rate}`}</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Prices;\n"]},"metadata":{},"sourceType":"module"}