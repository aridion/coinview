{"ast":null,"code":"var _jsxFileName = \"/Users/aron/Documents/code_training/coinview/components/Prices.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\n\nconst Prices = props => {\n  const {\n    0: coinData,\n    1: setCoinData\n  } = useState({\n    currency: props.bpi.bpi.USD.code,\n    rate: props.bpi.bpi.USD.rate\n  });\n  const coinDataArray = Object.entries(props.bpi.bpi);\n\n  const onDropdownChange = num => {\n    return {\n      currency: coinDataArray[num][1].code,\n      rate: coinDataArray[num][1].rate\n    };\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"your preferred exchange currency:\"), __jsx(\"select\", {\n    onChange: selected => setCoinData(onDropdownChange(selected.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"USD\"), __jsx(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"GBP\"), __jsx(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, \"EUR\"))), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"1 Bitcoin (BTC) is now equal to \", coinData.currency, \" \", coinData.rate));\n};\n\nexport default Prices;","map":{"version":3,"sources":["/Users/aron/Documents/code_training/coinview/components/Prices.js"],"names":["useState","Prices","props","coinData","setCoinData","currency","bpi","USD","code","rate","coinDataArray","Object","entries","onDropdownChange","num","selected","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BJ,QAAQ,CAAC;AACvCK,IAAAA,QAAQ,EAAEH,KAAK,CAACI,GAAN,CAAUA,GAAV,CAAcC,GAAd,CAAkBC,IADW;AAEvCC,IAAAA,IAAI,EAAEP,KAAK,CAACI,GAAN,CAAUA,GAAV,CAAcC,GAAd,CAAkBE;AAFe,GAAD,CAAxC;AAKA,QAAMC,aAAa,GAAGC,MAAM,CAACC,OAAP,CAAeV,KAAK,CAACI,GAAN,CAAUA,GAAzB,CAAtB;;AAEA,QAAMO,gBAAgB,GAAIC,GAAD,IAAS;AAChC,WAAO;AACLT,MAAAA,QAAQ,EAAEK,aAAa,CAACI,GAAD,CAAb,CAAmB,CAAnB,EAAsBN,IAD3B;AAELC,MAAAA,IAAI,EAAEC,aAAa,CAACI,GAAD,CAAb,CAAmB,CAAnB,EAAsBL;AAFvB,KAAP;AAID,GALD;;AAOA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,EAEE;AACE,IAAA,QAAQ,EAAGM,QAAD,IACRX,WAAW,CAACS,gBAAgB,CAACE,QAAQ,CAACC,MAAT,CAAgBC,KAAjB,CAAjB,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALF,EAME;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANF,EAOE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPF,CAFF,CADF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCACmCd,QAAQ,CAACE,QAD5C,OACuDF,QAAQ,CAACM,IADhE,CAbF,CADF;AAmBD,CAlCD;;AAoCA,eAAeR,MAAf","sourcesContent":["import { useState } from \"react\";\n\nconst Prices = (props) => {\n  const [coinData, setCoinData] = useState({\n    currency: props.bpi.bpi.USD.code,\n    rate: props.bpi.bpi.USD.rate,\n  });\n\n  const coinDataArray = Object.entries(props.bpi.bpi);\n\n  const onDropdownChange = (num) => {\n    return {\n      currency: coinDataArray[num][1].code,\n      rate: coinDataArray[num][1].rate,\n    };\n  };\n\n  return (\n    <>\n      <section>\n        <p>your preferred exchange currency:</p>\n        <select\n          onChange={(selected) =>\n            setCoinData(onDropdownChange(selected.target.value))\n          }\n        >\n          <option value=\"0\">USD</option>\n          <option value=\"1\">GBP</option>\n          <option value=\"2\">EUR</option>\n        </select>\n      </section>\n      <p>\n        1 Bitcoin (BTC) is now equal to {coinData.currency} {coinData.rate}\n      </p>\n    </>\n  );\n};\n\nexport default Prices;\n"]},"metadata":{},"sourceType":"module"}