{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/aron/Documents/code_training/coinview/components/Prices.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\n\nvar Prices = function Prices(props) {\n  _s();\n\n  var _useState = useState({\n    currency: \"USD\",\n    rate: \"not checked\"\n  }),\n      coinData = _useState[0],\n      setCoinData = _useState[1];\n\n  var usableCoinData = Object.entries(props.bpi.bpi);\n  console.log(\"usableCoinData\", usableCoinData);\n\n  var onDropdownChange = function onDropdownChange(num) {\n    return {\n      currency: usableCoinData[num][1].code,\n      rate: usableCoinData[num][1].rate\n    };\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"select\", {\n    onChange: function onChange(selected) {\n      return setCoinData();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(\"option\", {\n    value: \"0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"USD\"), __jsx(\"option\", {\n    value: \"1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"GBP\"), __jsx(\"option\", {\n    value: \"2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"EUR\")), console.log(coinData), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Bitcoin rate for \".concat(coinData.currency, \" : \").concat(usableCoinData[0][1].rate))));\n};\n\n_s(Prices, \"9ABD0WCMtjfh0co9gkIuQ4IyoS0=\");\n\n_c = Prices;\nexport default Prices;\n\nvar _c;\n\n$RefreshReg$(_c, \"Prices\");","map":{"version":3,"sources":["/Users/aron/Documents/code_training/coinview/components/Prices.js"],"names":["useState","Prices","props","currency","rate","coinData","setCoinData","usableCoinData","Object","entries","bpi","console","log","onDropdownChange","num","code","selected"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACQF,QAAQ,CAAC;AACvCG,IAAAA,QAAQ,EAAE,KAD6B;AAEvCC,IAAAA,IAAI,EAAE;AAFiC,GAAD,CADhB;AAAA,MACjBC,QADiB;AAAA,MACPC,WADO;;AAMxB,MAAMC,cAAc,GAAGC,MAAM,CAACC,OAAP,CAAeP,KAAK,CAACQ,GAAN,CAAUA,GAAzB,CAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BL,cAA9B;;AAEA,MAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,GAAD,EAAS;AAChC,WAAO;AACLX,MAAAA,QAAQ,EAAEI,cAAc,CAACO,GAAD,CAAd,CAAoB,CAApB,EAAuBC,IAD5B;AAELX,MAAAA,IAAI,EAAEG,cAAc,CAACO,GAAD,CAAd,CAAoB,CAApB,EAAuBV;AAFxB,KAAP;AAID,GALD;;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,QAAQ,EAAE,kBAACY,QAAD;AAAA,aAAcV,WAAW,EAAzB;AAAA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,EAGE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,CADF,EAMGK,OAAO,CAACC,GAAR,CAAYP,QAAZ,CANH,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACuBA,QAAQ,CAACF,QADhC,gBAC8CI,cAAc,CAAC,CAAD,CAAd,CAAkB,CAAlB,EAAqBH,IADnE,EADF,CAPF,CADF;AAeD,CA/BD;;GAAMH,M;;KAAAA,M;AAiCN,eAAeA,MAAf","sourcesContent":["import { useState } from \"react\";\n\nconst Prices = (props) => {\n  const [coinData, setCoinData] = useState({\n    currency: \"USD\",\n    rate: \"not checked\",\n  });\n\n  const usableCoinData = Object.entries(props.bpi.bpi);\n  console.log(\"usableCoinData\", usableCoinData);\n\n  const onDropdownChange = (num) => {\n    return {\n      currency: usableCoinData[num][1].code,\n      rate: usableCoinData[num][1].rate,\n    };\n  };\n\n  return (\n    <div>\n      <select onChange={(selected) => setCoinData()}>\n        <option value=\"0\">USD</option>\n        <option value=\"1\">GBP</option>\n        <option value=\"2\">EUR</option>\n      </select>\n      {console.log(coinData)}\n      <ul>\n        <li>\n          {`Bitcoin rate for ${coinData.currency} : ${usableCoinData[0][1].rate}`}\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Prices;\n"]},"metadata":{},"sourceType":"module"}